[main.py]
from tkinter import *
from court import *
from ball import *
width,height = 745,374
win = Tk()
win.title('Tennis Game')
win.geometry('745x374+150+150')
win.resizable(False,False)
court = Court(win,745,374,'court.png')
x1,y1 = width/2,height/2
x2,y2 = x1+30,y1+30
ball = Ball(court,x1,y1,x2,y2)
def play_game():
    ball.move_ball()
    win.after(50,play_game)
play_game()
win.mainloop()




[court.py]
from tkinter import *
class Court :
    def __init__(self,window,width,height,img) :
        self.canvas = Canvas(window,width = width,height = height)
        self.img = PhotoImage(file = img)
        self.canvas.create_image(width/2,height/2,image = self.img)
        self.width = width
        self.height = height
        self.canvas.pack()



[ball.py]
from tkinter import *

class Ball :
    def __init__ (self, court, x1, y1, x2, y2) :
        # 공의 좌표 초기화하기
        self.x1 = x1                            
        self.y1 = y1
        self.x2 = x2
        self.y2 = y2

        # 공의 이동 거리 초기화하기
        self.x_dist = -10
        self.y_dist = -10
	
	# 공의 가로, 세로 길이 초기화하기
        self.width = x2 - x1
        self.height = y2 - y1

	# Court 클래스 객체 저장하기
        self.court = court

	# Court 클래스의 캔버스 저장하기
        self.canvas = court.canvas

	# 캔버스에 공 생성
        self.ball = self.canvas.create_oval(x1, y1, x2, y2, fill = "yellow")

 	
    # 공을 움직이는 메소드 정의하기
    def move_ball(self) :
        self.x1 += self.x_dist
        self.y1 += self.y_dist     
        # 위쪽 벽 충돌하면 방향 바꾸기
        if self.y1 <= 5 :
            self.y1=5
            self.y_dist *= -1
        # 아래쪽 벽 충돌하면 방향 바꾸기
        if self.y1 >= (self.court.height - (self.height - 5)) :
            self.y1 = self.court.height - (self.height - 5)
            self.y_dist *= -1

        # 왼쪽 벽 충돌하면 방향 바꾸기
	# 왼쪽, 오른쪽 벽 충돌 시 방향 바꾸는 것을 주석을 풀고 확인해 보세요. 
        if self.x1 <= 5 :
               self.x1 = 5
               self.x_dist *= -1
 	    # self.stop_ball()        # 공 멈추기 메소드 호출

        # 오른쪽 벽 충돌하면 방향 바꾸기
        if self.x1 + self.width >= self.court.width - 5 :
            self.x_dist *= -1
 	    # self.stop_ball()       # 공 멈추기 메소드 호출
                
        # 공 이동 좌표 저장
        self.x1 = self.x1
        self.x2 = self.x1 + self.width
        self.y1 = self.y1
        self.y2 = self.y1 + self.height
        # 공 위치 변경
        self.canvas.coords(self.ball,self.x1,self.y1,self.x2,self.y2) 
